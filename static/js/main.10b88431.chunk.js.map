{"version":3,"sources":["pages/NotFoundPage/NotFoundPage.tsx","pages/HomePage/HomePage.tsx","api.ts","components/ErrorMessege/ErrorMesseage.tsx","components/Loader/Loader.tsx","components/NoPeopleMessege/NoPeopleMessege.tsx","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","pages/PeoplePage/PeoplePage.tsx","components/PageNavLink/PageNavLink.tsx","components/Header/Header.tsx","App.tsx","index.tsx"],"names":["NotFoundPage","className","HomePage","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","ErrorMesseage","Loader","NoPeopleMessege","PersonLink","person","personSlug","useParams","slug","name","sex","born","died","motherName","fatherName","mother","father","classNames","to","PeopleTable","people","map","PeoplePage","useState","setPeople","isLoaded","setIsLoaded","isError","setIsError","useEffect","loadedPeople","data","visiblePeople","find","length","PageNavLink","title","isActive","Header","role","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.10b88431.chunk.js","sourcesContent":["export const NotFoundPage = () => {\n  return (\n    <h1 className=\"title\">\n      Page not found\n    </h1>\n  );\n};\n","export const HomePage = () => {\n  return (\n    <h1 className=\"title\">\n      Home Page\n    </h1>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","export const ErrorMesseage = () => {\n  return (\n    <p\n      data-cy=\"peopleLoadingError\"\n      className=\"has-text-danger\"\n    >\n      Something went wrong\n    </p>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","export const NoPeopleMessege = () => {\n  return (\n    <p data-cy=\"noPeopleMessage\">\n      There are no people on the server\n    </p>\n  );\n};\n","import { Link, useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const personSlug = useParams();\n  const {\n    slug,\n    name,\n    sex,\n    born,\n    died,\n    motherName,\n    fatherName,\n    mother,\n    father,\n  } = person;\n\n  return (\n    <tr\n      data-cy=\"person\"\n      key={slug}\n      className={classNames(\n        {\n          'has-background-warning': personSlug.slug === slug,\n        },\n      )}\n    >\n      <td>\n        <Link\n          to={`../${slug}`}\n          className={classNames(\n            {\n              'has-text-danger': sex === 'f',\n            },\n          )}\n        >\n          {name}\n        </Link>\n      </td>\n      <td>\n        {sex}\n      </td>\n      <td>\n        {born}\n      </td>\n      <td>\n        {died}\n      </td>\n      <td>\n        {mother\n          ? (\n            <Link\n              to={`../${mother.slug}`}\n              className=\"has-text-danger\"\n            >\n              {mother.name}\n            </Link>\n          )\n          : motherName || '-'}\n      </td>\n      <td>\n        {father\n          ? (\n            <Link to={`../${father.slug}`}>\n              {father.name}\n            </Link>\n          )\n          : fatherName || '-'}\n      </td>\n    </tr>\n  );\n};\n","import { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\ntype Props = {\n  people: Person[],\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"\n    table\n    is-striped\n    is-hoverable\n    is-narrow\n    is-fullwidth\n  \"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map((person) => (\n          <PersonLink person={person} key={person.slug} />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { getPeople } from '../../api';\nimport { ErrorMesseage } from '../../components/ErrorMessege';\nimport { Loader } from '../../components/Loader';\nimport { NoPeopleMessege } from '../../components/NoPeopleMessege';\nimport { PeopleTable } from '../../components/PeopleTable';\nimport { Person } from '../../types';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    setIsLoaded(true);\n\n    const loadedPeople = async () => {\n      try {\n        const data = await getPeople();\n\n        const visiblePeople = data.map(person => ({\n          ...person,\n          mother: data.find(mother => mother.name === person.motherName),\n          father: data.find(father => father.name === person.fatherName),\n        }));\n\n        setPeople(visiblePeople);\n      } catch (error) {\n        setIsError(true);\n      } finally {\n        setIsLoaded(false);\n      }\n    };\n\n    loadedPeople();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoaded && <Loader />}\n\n          {isError && <ErrorMesseage />}\n\n          {!isError && !isLoaded && !people.length && <NoPeopleMessege />}\n\n          {!isLoaded && !isError && <PeopleTable people={people} />}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\ntype Props = {\n  to: string,\n  title: string,\n};\n\nexport const PageNavLink: React.FC<Props> = ({ to, title }) => {\n  return (\n    <NavLink\n      className={({ isActive }) => classNames(\n        'navbar-item',\n        {\n          'has-background-grey-lighter': isActive,\n        },\n      )}\n      to={to}\n    >\n      {title}\n    </NavLink>\n  );\n};\n","import { PageNavLink } from '../PageNavLink';\n\nexport const Header = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <PageNavLink to=\"/\" title=\"Home\" />\n          <PageNavLink to=\"/people\" title=\"People\" />\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport { NotFoundPage } from './pages/NotFoundPage/NotFoundPage';\nimport { HomePage } from './pages/HomePage/HomePage';\nimport { PeoplePage } from './pages/PeoplePage/PeoplePage';\nimport { Header } from './components/Header/Header';\nimport './App.scss';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Header />\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route\n              path=\"*\"\n              element={<NotFoundPage />}\n            />\n\n            <Route\n              path=\"/\"\n              element={<HomePage />}\n            />\n\n            <Route\n              path=\"home\"\n              element={<Navigate to=\"/\" replace />}\n            />\n\n            <Route path=\"people\">\n              <Route\n                index\n                element={(<PeoplePage />)}\n              />\n\n              <Route\n                path=\":slug\"\n                element={(<PeoplePage />)}\n              />\n            </Route>\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}